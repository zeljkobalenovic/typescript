KLASE 
=====

class [imeklase] {
    [properties...]
    constructor 
    [methods]
}

Ime klase po konvenciji je i ime fajla .ts ( u javi je OBAVEZNO ovde nije , ali UVEK tako pisati)
Properties po DEFAULTU imaju public ( u javi je default package )
Typescript ima 3 nivoa pristupa:
    1   public (default) svi mogu pristupiti 
    2   protected svi u klasi i subklasama(naslednicima)
    3   private samo u klasi
Klase u ts imaju samo JEDAN constructor (ako ga ne napisemo default je new imeklase()).
Primeri definisanja i upotrebe klasa u Customer.ts:
Customer    najjednostavnija varijanta (default konstruktor, default public pristup properties, bez metoda)
Customer2   realniji slucaj (definisan konstruktor, private properties , geter+seter metode - kao u javi )
Customer3   kao 2 , ali krace koristeci construktor (ne moraju se navoditi properties)
Customer4   kao 2 i 3 , ali sa accessor umesto geter+seter ( ovo nema u javi ) + za ovo je minimum ES5 javascript
Customer5   kako treba knjiski nazive properties da vs code automatski generise accessore (ali onda neide konstruktor koji pravi properties)

Ostalo je tsc config - konfigurisanje parametara kompajlera. Pravi se sa tsc -init (kad se napravi moze se menjati po potrebi)
Kad postoji tsconfig.json sve u tom folderu i subfolderima se kompajlira sa obicnim tsc (ne nazvode se imena fajlova - kompajlira sve ts u folderu i subfolderima).